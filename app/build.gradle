plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

repositories {
    mavenCentral()
    maven { url 'https://maven.google.com' }
}


android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.agustin.sample"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // API REST URLs
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"a8132682643637c895cddf6765fa0397\""
        buildConfigField "String", "READ_ACCESS_TOKEN", "\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhODEzMjY4MjY0MzYzN2M4OTVjZGRmNjc2NWZhMDM5NyIsInN1YiI6IjVmNTJiZjc5ZDcwNTk0MDAzMWM5N2Y0ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KAiC_KsG2bP14M0mEUxUDs0WdTeBS9V-HAM7UpI5VW0\""
        buildConfigField "String", "IMAGE_BASE_URL", "\"https://image.tmdb.org/t/p/w500\""
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {

            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard-libs').asList().toArray()
        }
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"

            manifestPlaceholders = [appName: "@string/app_name_dev"]
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }

        prod {
            dimension "default"

            manifestPlaceholders = [appName: "@string/app_name"]
        }
    }
    // Enables view binding.
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
    }
}

ext {
    legacy_version = "1.0.0"
    constraint_layout_version = "2.0.4"
    koin_version = "3.0.1-beta-1"
    appCompat_version = "1.2.0"
    material_design_version = "1.3.0"
    coroutines_version = "1.4.3"
    timber_version = "4.7.1"
    moshi_version = "1.11.0"
    retrofit_version = "2.9.0"
    lifecycle_extensions = "2.2.0"
    lifecycle_version = "2.3.1"
    room_version = "2.2.6"
    coil_version = "1.1.1"
    junit_version = "1.1.2"
    test_rule_version = "1.0.2"
    mockito_version = "2.2.0"
    espresso_version = "3.1.1"
    core_testing_version = "2.1.0"
    mockito_inline_version = "2.28.2"
    kotlinx_coroutines_play_services_version = "1.4.3"
    ktx_activity_version = "1.2.2"
    ktx_fragment_version = "1.3.2"
    ok_http_version = "4.9.0"
    chuck_version = "3.4.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.legacy:legacy-support-v4:$legacy_version"
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation "com.google.android.material:material:$material_design_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.activity:activity-ktx:$ktx_activity_version"
    implementation "androidx.fragment:fragment-ktx:$ktx_fragment_version"

    //Logs
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Retrofit
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Http Logging Interceptor
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // Friendly Http Inspector through separate App
    debugImplementation "com.github.chuckerteam.chucker:library:$chuck_version"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chuck_version"
    // Use no-op versions for testing
    testImplementation "com.github.chuckerteam.chucker:library-no-op:$chuck_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Android Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Coil
    implementation "io.coil-kt:coil:$coil_version"

    // Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-android-ext:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"

    // Test
    // Unit testing framework
    androidTestImplementation "com.android.support.test:rules:$test_rule_version"
    testImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"

    // Mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"

    // Test Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Espresso
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation("androidx.arch.core:core-testing:$core_testing_version", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
}
